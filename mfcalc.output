Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input line

    3 line: '\n'
    4     | exp '\n'
    5     | exp ';' '\n'
    6     | error '\n'
    7     | command '\n'

    8 command: COM
    9        | COM params

   10 params: ARG
   11       | params ARG

   12 exp: NUM
   13    | VAR
   14    | VAR '=' exp
   15    | FUN '(' exp ')'
   16    | exp '+' exp
   17    | exp '-' exp
   18    | exp '*' exp
   19    | exp '/' exp
   20    | '-' exp
   21    | exp '^' exp
   22    | '(' exp ')'


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 3 4 5 6 7
    '(' (40) 15 22
    ')' (41) 15 22
    '*' (42) 18
    '+' (43) 16
    '-' (45) 17 20
    '/' (47) 19
    ';' (59) 5
    '=' (61) 14
    '^' (94) 21
    error (256) 6
    NUM <double> (258) 12
    VAR <tipoelem> (259) 13 14
    FUN <tipoelem> (260) 15
    COM <tipoelem> (261) 8 9
    ARG <tipoelemPila> (262) 10 11
    NEG (263)


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    exp <double> (20)
        on left: 12 13 14 15 16 17 18 19 20 21 22
        on right: 4 5 14 15 16 17 18 19 20 21 22
    params <pila> (21)
        on left: 10 11
        on right: 9 11
    input (22)
        on left: 1 2
        on right: 0 2
    line (23)
        on left: 3 4 5 6 7
        on right: 2
    command (24)
        on left: 8 9
        on right: 7


State 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . line

    $end   shift, and go to state 2
    error  shift, and go to state 3
    NUM    shift, and go to state 4
    VAR    shift, and go to state 5
    FUN    shift, and go to state 6
    COM    shift, and go to state 7
    '-'    shift, and go to state 8
    '\n'   shift, and go to state 9
    '('    shift, and go to state 10

    exp      go to state 11
    line     go to state 12
    command  go to state 13


State 2

    0 $accept: input $end .

    $default  accept


State 3

    6 line: error . '\n'

    '\n'  shift, and go to state 14


State 4

   12 exp: NUM .

    $default  reduce using rule 12 (exp)


State 5

   13 exp: VAR .
   14    | VAR . '=' exp

    '='  shift, and go to state 15

    $default  reduce using rule 13 (exp)


State 6

   15 exp: FUN . '(' exp ')'

    '('  shift, and go to state 16


State 7

    8 command: COM .
    9        | COM . params

    ARG  shift, and go to state 17

    $default  reduce using rule 8 (command)

    params  go to state 18


State 8

   20 exp: '-' . exp

    NUM  shift, and go to state 4
    VAR  shift, and go to state 5
    FUN  shift, and go to state 6
    '-'  shift, and go to state 8
    '('  shift, and go to state 10

    exp  go to state 19


State 9

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 10

   22 exp: '(' . exp ')'

    NUM  shift, and go to state 4
    VAR  shift, and go to state 5
    FUN  shift, and go to state 6
    '-'  shift, and go to state 8
    '('  shift, and go to state 10

    exp  go to state 20


State 11

    4 line: exp . '\n'
    5     | exp . ';' '\n'
   16 exp: exp . '+' exp
   17    | exp . '-' exp
   18    | exp . '*' exp
   19    | exp . '/' exp
   21    | exp . '^' exp

    '-'   shift, and go to state 21
    '+'   shift, and go to state 22
    '*'   shift, and go to state 23
    '/'   shift, and go to state 24
    '^'   shift, and go to state 25
    '\n'  shift, and go to state 26
    ';'   shift, and go to state 27


State 12

    2 input: input line .

    $default  reduce using rule 2 (input)


State 13

    7 line: command . '\n'

    '\n'  shift, and go to state 28


State 14

    6 line: error '\n' .

    $default  reduce using rule 6 (line)


State 15

   14 exp: VAR '=' . exp

    NUM  shift, and go to state 4
    VAR  shift, and go to state 5
    FUN  shift, and go to state 6
    '-'  shift, and go to state 8
    '('  shift, and go to state 10

    exp  go to state 29


State 16

   15 exp: FUN '(' . exp ')'

    NUM  shift, and go to state 4
    VAR  shift, and go to state 5
    FUN  shift, and go to state 6
    '-'  shift, and go to state 8
    '('  shift, and go to state 10

    exp  go to state 30


State 17

   10 params: ARG .

    $default  reduce using rule 10 (params)


State 18

    9 command: COM params .
   11 params: params . ARG

    ARG  shift, and go to state 31

    $default  reduce using rule 9 (command)


State 19

   16 exp: exp . '+' exp
   17    | exp . '-' exp
   18    | exp . '*' exp
   19    | exp . '/' exp
   20    | '-' exp .
   21    | exp . '^' exp

    '^'  shift, and go to state 25

    $default  reduce using rule 20 (exp)


State 20

   16 exp: exp . '+' exp
   17    | exp . '-' exp
   18    | exp . '*' exp
   19    | exp . '/' exp
   21    | exp . '^' exp
   22    | '(' exp . ')'

    '-'  shift, and go to state 21
    '+'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '^'  shift, and go to state 25
    ')'  shift, and go to state 32


State 21

   17 exp: exp '-' . exp

    NUM  shift, and go to state 4
    VAR  shift, and go to state 5
    FUN  shift, and go to state 6
    '-'  shift, and go to state 8
    '('  shift, and go to state 10

    exp  go to state 33


State 22

   16 exp: exp '+' . exp

    NUM  shift, and go to state 4
    VAR  shift, and go to state 5
    FUN  shift, and go to state 6
    '-'  shift, and go to state 8
    '('  shift, and go to state 10

    exp  go to state 34


State 23

   18 exp: exp '*' . exp

    NUM  shift, and go to state 4
    VAR  shift, and go to state 5
    FUN  shift, and go to state 6
    '-'  shift, and go to state 8
    '('  shift, and go to state 10

    exp  go to state 35


State 24

   19 exp: exp '/' . exp

    NUM  shift, and go to state 4
    VAR  shift, and go to state 5
    FUN  shift, and go to state 6
    '-'  shift, and go to state 8
    '('  shift, and go to state 10

    exp  go to state 36


State 25

   21 exp: exp '^' . exp

    NUM  shift, and go to state 4
    VAR  shift, and go to state 5
    FUN  shift, and go to state 6
    '-'  shift, and go to state 8
    '('  shift, and go to state 10

    exp  go to state 37


State 26

    4 line: exp '\n' .

    $default  reduce using rule 4 (line)


State 27

    5 line: exp ';' . '\n'

    '\n'  shift, and go to state 38


State 28

    7 line: command '\n' .

    $default  reduce using rule 7 (line)


State 29

   14 exp: VAR '=' exp .
   16    | exp . '+' exp
   17    | exp . '-' exp
   18    | exp . '*' exp
   19    | exp . '/' exp
   21    | exp . '^' exp

    '-'  shift, and go to state 21
    '+'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '^'  shift, and go to state 25

    $default  reduce using rule 14 (exp)


State 30

   15 exp: FUN '(' exp . ')'
   16    | exp . '+' exp
   17    | exp . '-' exp
   18    | exp . '*' exp
   19    | exp . '/' exp
   21    | exp . '^' exp

    '-'  shift, and go to state 21
    '+'  shift, and go to state 22
    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '^'  shift, and go to state 25
    ')'  shift, and go to state 39


State 31

   11 params: params ARG .

    $default  reduce using rule 11 (params)


State 32

   22 exp: '(' exp ')' .

    $default  reduce using rule 22 (exp)


State 33

   16 exp: exp . '+' exp
   17    | exp . '-' exp
   17    | exp '-' exp .
   18    | exp . '*' exp
   19    | exp . '/' exp
   21    | exp . '^' exp

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '^'  shift, and go to state 25

    $default  reduce using rule 17 (exp)


State 34

   16 exp: exp . '+' exp
   16    | exp '+' exp .
   17    | exp . '-' exp
   18    | exp . '*' exp
   19    | exp . '/' exp
   21    | exp . '^' exp

    '*'  shift, and go to state 23
    '/'  shift, and go to state 24
    '^'  shift, and go to state 25

    $default  reduce using rule 16 (exp)


State 35

   16 exp: exp . '+' exp
   17    | exp . '-' exp
   18    | exp . '*' exp
   18    | exp '*' exp .
   19    | exp . '/' exp
   21    | exp . '^' exp

    '^'  shift, and go to state 25

    $default  reduce using rule 18 (exp)


State 36

   16 exp: exp . '+' exp
   17    | exp . '-' exp
   18    | exp . '*' exp
   19    | exp . '/' exp
   19    | exp '/' exp .
   21    | exp . '^' exp

    '^'  shift, and go to state 25

    $default  reduce using rule 19 (exp)


State 37

   16 exp: exp . '+' exp
   17    | exp . '-' exp
   18    | exp . '*' exp
   19    | exp . '/' exp
   21    | exp . '^' exp
   21    | exp '^' exp .

    '^'  shift, and go to state 25

    $default  reduce using rule 21 (exp)


State 38

    5 line: exp ';' '\n' .

    $default  reduce using rule 5 (line)


State 39

   15 exp: FUN '(' exp ')' .

    $default  reduce using rule 15 (exp)
